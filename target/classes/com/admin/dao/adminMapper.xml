<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="adminSQL">

	<!-- adminLogin -->
	<select id="loginProcess" resultType="admin" parameterType="java.util.Map">
		select * from mind_admin where id=#{id} and password=#{password}
	</select>
	
	<!-- accumulateLoader -->
	<select id="accumulateLoader" resultType="aiDTO">
		select * from mind_implant
	</select>
	
	<!-- implant_count -->
	<update id="implant_count" parameterType="Integer">
		update mind_implant SET implant_count=#{implant_count}
	</update>
	<!-- implant_date -->
	<update id="implant_date" parameterType="String">
		update mind_implant SET implant_date = #{implant_date}
	</update>
	
	<!-- add_staff_exe -->
	<insert id="add_staff_exe" parameterType="asDTO">
		insert into mind_staff
			(asName, asPosition, asCareer1, asCareer2, asMainCareer, mainImgName, pageImgName) 
			values("${asName}", "${asPosition}", "${asCareer1}", "${asCareer2}", "${asMainCareer}", "${mainImgName}", "${pageImgName}")
	</insert>
	
	<!-- staff list -->
	<select id="adminStaffList" resultType="asDTO">
		select asIndex, asName, asPosition, asMainCareer, mainImgName from mind_staff
	</select>
	
	<!-- staff loder -->
	<select id="adminStaffLoader" parameterType="Integer" resultType="asDTO">
		select * from mind_staff where asIndex=#{asIndex}
	</select>
	
	<!-- modify_staff_exe -->
	<update id="modify_staff_exe" parameterType="asDTO">
		update mind_staff set asName="${asName}", asPosition="${asPosition}", asCareer1="${asCareer1}", asCareer2="${asCareer2}", asMainCareer="${asMainCareer}", mainImgName="${mainImgName}", pageImgName="${pageImgName}"
		where asIndex=${asIndex} 
	</update>
	
	<!-- delete staff -->
	<delete id="delete_staff" parameterType="Integer">
		delete from mind_staff where asIndex=#{asIndex}
	</delete>
	
	<!-- allStaffList -->
	<select id="allStaffList" resultType="asDTO">
		select * from mind_staff
	</select>
	
	<!-- insert board -->
	<insert id="adminBoardWrite" parameterType="abDTO">
		insert into mind_board (abSubject, abType, abContent, abFile, abDate) 
		values ('${abSubject}', ${abType}, '${abContent}', '${abFile}', NOW())
	</insert>
	<!-- board list -->
	<select id="adminBoardList" resultType="abDTO">
		select abNum, abSubject, abType, abContent, abFile, DATE_FORMAT(abDate, '%Y.%m.%d') as 'abDate', abHit from mind_board 
		where abType=1 or abType=2
		order by abNum desc
	</select>
	<select id="adminBoardListNormal" parameterType="java.util.Map" resultType="abDTO">
		select * from(select @rownum:= @rownum+1 as rownum, abNum, abSubject, abType, abContent, abFile, DATE_FORMAT(abDate, '%Y.%m.%d') as 'abDate', abHit 
		from mind_board , (select @rownum:=0) tmp
		where abType=0
		order BY abNum desc, rownum desc
		) r1
		limit ${pageSize} offset ${startNum}
	</select>
	<!-- hit Up -->
	<update id="hitUp" parameterType="Integer">
		update mind_board set abHit = abHit +1 where abNum=#{abNum}
	</update>
	<!-- notice view -->
	<select id="noticeView" parameterType="Integer" resultType="abDTO">
		select abNum, abSubject, abType, abContent, abFile, DATE_FORMAT(abDate, '%Y.%m.%d') as 'abDate', abHit from mind_board where abNum = #{abNum}
	</select>
	<!-- getTotalCnt -->
	<select id="getTotal" resultType="Integer">
		select count(*) from mind_board where abType=0
	</select>
	<!-- boardModify -->
	<update id="boardModify" parameterType="abDTO">
		update mind_board set 
			abSubject = '${abSubject}', abType = ${abType}, abContent = '${abContent}', abFile = '${abFile}', abDate = now()
			where abNum = ${abNum}
	</update>
	
	<!-- next / previos -->
	<select id="boardNext" parameterType="java.util.Map" resultType="Integer">
		select
		    abNum
		 from
		    mind_board
		 where
		  abNum in ( select * from (
		    (select abNum from mind_board where abNum &gt; ${abNum} and abType = ${abType} order by abNum limit 1) as tmp)
		   )
	</select>
	<select id="boardPrevious" parameterType="java.util.Map" resultType="Integer">
		select
		    abNum
		 from
		    mind_board
		 where
		  abNum in ( select * from (
		    (select abNum from mind_board where abNum &lt; ${abNum} and abType = ${abType} order by abNum desc limit 1) as tmp)
		   )
	</select>
	<select id="getMin" resultType="Integer">
		select min(abNum) from mind_board
	</select>
	<!-- boardDelete -->
	<delete id="boardDelete" parameterType="Integer">
		delete from mind_board where abNum=#{abNum}
	</delete>
	
	<!-- banner -->
		<!-- banner Insert -->
		<insert id="adminBannerAdd_exe" parameterType="abanDTO">
			insert into mind_banner (ban2880, ban2560, ban1920, banURL)
			values('${ban2880}', '${ban2560}', '${ban1920}', '${banURL}')
		</insert>
		<!-- banner list -->
		<select id="adminBannerList" resultType="abanDTO">
			select * from mind_banner order by banIndex
		</select>
		<!-- get banner -->
		<select id="getBanner" parameterType="Integer" resultType="abanDTO">
			select * from mind_banner where banIndex = #{banIndex}
		</select>
		<!-- mod banner -->
		<update id="modBanner" parameterType="abanDTO">
			update mind_banner set
				ban2880 = '${ban2880}', ban2560 = '${ban2560}', ban1920 = '${ban1920}', banURL = '${banURL}'
				where banIndex = ${banIndex}
		</update>
		<!-- del banner -->
		<delete id="delBanner" parameterType="Integer">
			delete from mind_banner where banIndex = #{banIndex}
		</delete>
		
	<!-- slide -->
		<!-- slide insert -->
		<insert id="addSlide" parameterType="aslideDTO">
			insert into mind_slide (slideImg) values('${slideImg}')
		</insert>
		<!-- slide list -->
		<select id="getSlideList" resultType="aslideDTO">
			select * from mind_slide order by slideIndex
		</select>
		<!-- get slide -->
		<select id="getSlide" parameterType="Integer" resultType="aslideDTO">
			select * from mind_slide where slideIndex = #{slideIndex}
		</select>
		<!-- mod slide -->
		<update id="modSlide" parameterType="aslideDTO">
			update mind_slide set
				slideImg = '${slideImg}'
				where slideIndex = ${slideIndex}
		</update>
		<!-- del slide -->
		<delete id="delSlide" parameterType="Integer">
			delete from mind_slide where slideIndex = #{slideIndex}
		</delete>
</mapper>


